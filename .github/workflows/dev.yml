name: Deploy Dev
on:
  push:
    branches:
      - master

jobs:
  test-secret:
    name: Secret Scanning
    runs-on: ubuntu-latest
    environment: development
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: GitGuardian scan
        uses: GitGuardian/ggshield-action@v1.37.0
        env:
          GITHUB_PUSH_BEFORE_SHA: ${{ github.event.before }}
          GITHUB_PUSH_BASE_SHA: ${{ github.event.base }}
          GITHUB_PULL_BASE_SHA: ${{ github.event.pull_request.base.sha }}
          GITHUB_DEFAULT_BRANCH: ${{ github.event.repository.default_branch }}
          GITGUARDIAN_API_KEY: ${{ secrets.GITGUARDIAN_API_KEY }}

  build:
    name: Build
    runs-on: ubuntu-latest
    environment: development
    needs:
      - test-secret
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Creating Docker Meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKER_IMAGE }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr

      - name: Login to registry
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.DOCKER_REGISTRY_NAME }}
          username: ${{ secrets.DOCKER_REGISTRY_USER }}
          password: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build build layer
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          target: deps
          push: false
          cache-from: |
            type=gha,scope=deps
          cache-to: |
            type=gha,scope=deps,mode=max
      - name: Build and Push Final layer
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          target: api
          push: true
          cache-from: |
            type=gha,scope=deps
            type=gha,scope=api
          cache-to: |
            type=gha,scope=api,mode=max
          tags: ${{ steps.meta.outputs.tags }}

  deploy:
    name: Deploying
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Creating Docker Meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKER_IMAGE }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr

      - name: Change Server Config
        run: |
          curl --location --request PATCH '${{ secrets.DEV_COOLIFY_URL }}/api/v1/applications/${{ secrets.DEV_APP_ID }}' \
            --header 'Content-Type: application/json' \
            --header 'Authorization: Bearer ${{ secrets.DEV_COOLIFY_TOKEN }}' \
            --data '{
                "docker_registry_image_name": "${{ secrets.DOCKER_IMAGE }}",
                "docker_registry_image_tag": "${{ steps.meta.outputs.version }}"
            }'

      - name: Deploy to Coolify
        run: |
          curl --request GET '${{ secrets.DEV_COOLIFY_URL }}/api/v1/deploy?uuid=${{ secrets.DEV_APP_ID }}&force=false' \
          --header 'Authorization: Bearer ${{ secrets.DEV_COOLIFY_TOKEN }}'

